name: CI for microservice-1

on:
  workflow_dispatch:
  push:
   branches:
      - main
   paths:
       - 'app/microservice-1/**'
       
permissions: 
  contents: write  # Allow GITHUB_TOKEN to push changes
  
jobs:
  build-push-ms1:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Step 2: Set up Docker Buildx for multi-platform builds (if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Login to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: az acr login --name homegloberegistry.azurecr.io

      # Step 4: Get short Git commit SHA
      - name: Get short Git commit SHA
        id: vars
        run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

      # Step 5: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Check Java environment
        run: echo $JAVA_HOME
      
      # Step 6: Build the Microservice with Gradle Wrapper
      - name: Build the Microservice with Gradle Wrapper
        run:  |
          cd app/microservice-1
          ./gradlew build --no-daemon

      # Step 7: Verify JAR file exists
      - name: Verify JAR file exists
        run: ls -l app/microservice-1/build/libs

      # Step 8: Download the Java 17 docker image locally first
      - name: Download the Java 17 docker image locally
        run: docker pull openjdk:17.0.2-slim-buster

      # Step 9: Build and push Docker image for Microservice 1 to Azure ACR
      # Now using the Dockerfile to include the built JAR file
      - name: Build and push Docker image to Azure ACR
        run: |
          cd app/microservice-1
          docker build -t homegloberegistry.azurecr.io/microservice-1:${{ steps.vars.outputs.commit_sha }} .
          docker push homegloberegistry.azurecr.io/microservice-1:${{ steps.vars.outputs.commit_sha }}
